#!/bin/bash

# Created by G.Capelli (BasicAirData) on 28/10/2020

# The script reads the "versionName" property from gradle file and execute some tasks
# in order to prepare apks and zipped source files for the new release.
# It performs the following tasks:

# 1) it brings the signed app-release.apk and copy it into apk folder with the right name
# 2) it substitutes the WalkingLogger-latest.apk with the new one
# 3) it zips the source code and places the archive into the sourcecode folder

# This script is made to be executed after the building of the signed apk file,
# and must be executed from inside the WalkingLogger project Folder.


currentpath=$(pwd)
if [[ ${currentpath} != *"WalkingLogger"* ]];then
	# currentpath does not contain "WalkingLogger"
	echo WalkingLogger Project Folder not found, exiting...
	exit 1
fi

walkingloggerpath="${currentpath%WalkingLogger*}WalkingLogger/"
echo "Project Folder: ${walkingloggerpath}"
cd ${walkingloggerpath}



# Read the versionName from gradle file

ver=$(grep -n "versionName " ./app/build.gradle | cut -d"'" -f 2)

if [ -z "$ver" ]; then
	echo Version number not found, exiting...
	exit 1
fi
echo "Preparing WalkingLogger v${ver}:"

apkrelease="apk/WalkingLogger-${ver}.apk"
apklatest="apk/WalkingLogger-latest.apk"
zipsource="sourcecode/WalkingLogger-${ver} - Source.zip"



# 1) Copy the APK file (generated by Android Studio
#    with "Generate Signed Bundle / APK" command) into ./apk

cp ./app/release/app-release.apk "${apkrelease}"
echo "- Created:             ${apkrelease}"



# 2) Update the latest APK file

cp "${apkrelease}" "${apklatest}"
echo "- Updated:             ${apklatest}"



# 3) Zip the Source into ./sourcecode folder

zip -r "${zipsource}" ./app/src ./app/*.* > /dev/null 2>&1
echo "- Zipped source into:  ${zipsource}"
